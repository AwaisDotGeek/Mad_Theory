// Import necessary dependencies
import React from "react";
import { View, Button, TextInput, Text } from "react-native";
import { createStackNavigator } from "react-navigation-stack";
import { createAppContainer } from "react-navigation";
import * as FileSystem from "expo-file-system";

// Profile screen component
class ProfileScreen extends React.Component {
  render() {
    const { navigation } = this.props;
    const userName = navigation.getParam("userName", "Unknown");
    const age = navigation.getParam("age", "Unknown");

    return (
      <View>
        <Text>Welcome, {userName}!</Text>
        <Text>Age: {age}</Text>
      </View>
    );
  }
}

// Signup screen component
class SignupScreen extends React.Component {
  state = {
    email: "",
    password: "",
    repeatPassword: "",
  };

  handleSignup = async () => {
    const { navigation } = this.props;
    const { email, password, repeatPassword } = this.state;

    if (password !== repeatPassword) {
      alert("Passwords do not match");
      return;
    }

    // Save the credentials to a local file
    const credentials = JSON.stringify({ email, password });
    await FileSystem.writeAsStringAsync(
      FileSystem.documentDirectory + "credentials.json",
      credentials
    );

    // Redirect to the login screen
    navigation.navigate("Login");
  };

  render() {
    return (
      <View>
        <TextInput
          placeholder="Email"
          onChangeText={(email) => this.setState({ email })}
        />
        <TextInput
          placeholder="Password"
          onChangeText={(password) => this.setState({ password })}
          secureTextEntry
        />
        <TextInput
          placeholder="Repeat Password"
          onChangeText={(repeatPassword) => this.setState({ repeatPassword })}
          secureTextEntry
        />
        <Button title="Login" onPress={this.handleSignup} />
      </View>
    );
  }
}

// Login screen component
class LoginScreen extends React.Component {
  state = {
    email: "",
    password: "",
  };

  handleLogin = async () => {
    const { navigation } = this.props;
    const { email, password } = this.state;

    // Read the saved credentials from the local file
    const fileUri = FileSystem.documentDirectory + "credentials.json";
    const fileContent = await FileSystem.readAsStringAsync(fileUri);
    const savedCredentials = JSON.parse(fileContent);

    if (
      email === savedCredentials.email &&
      password === savedCredentials.password
    ) {
      navigation.navigate("Profile", { userName: "John Doe", age: "25" });
    } else {
      alert("Invalid email or password");
    }
  };

  render() {
    return (
      <View>
        <TextInput
          placeholder="Email"
          onChangeText={(email) => this.setState({ email })}
        />
        <TextInput
          placeholder="Password"
          onChangeText={(password) => this.setState({ password })}
          secureTextEntry
        />
        <Button title="Login" onPress={this.handleLogin} />
      </View>
    );
  }
}

// Create the stack navigator
const AppNavigator = createStackNavigator(
  {
    Login: LoginScreen,
    Signup: SignupScreen,
    Profile: ProfileScreen,
  },
  {
    initialRouteName: "Signup", // Set the initial screen to Signup
  }
);

// Create the app container
const AppContainer = createAppContainer(AppNavigator);

// Render the app container
export default function App() {
  return <AppContainer />;
}
